generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model orders {
  id           String     @id @db.Uuid
  user_id      String     @db.Uuid
  list_product Json
  create_at    DateTime?  @default(now()) @db.Timestamp(6)
  status       String     @db.VarChar(50)
  update_at    DateTime?  @default(now()) @db.Timestamp(6)
  shipping     shipping[]
}

model users {
  user_id   String    @id @db.Uuid
  user_name String    @db.VarChar(255)
  password  String    @db.VarChar(255)
  full_name String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  phone     String    @unique @db.VarChar(255)
  create_at DateTime? @default(now()) @db.Timestamp(6)
  is_remove Boolean?  @default(false)
}

model cart_product {
  id           String     @id @db.Uuid
  product_data Json
  user_id      String?    @db.Uuid
  payments     payments[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_details {
  id            Int       @id @default(autoincrement())
  user_id       Int
  delivery_date DateTime  @db.Timestamp(6)
  delivered_by  String    @db.VarChar(255)
  item_name     String    @db.VarChar(255)
  item_image    String?   @db.VarChar(255)
  item_quantity Int
  item_seller   String    @db.VarChar(255)
  order_status  String    @db.VarChar(50)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  order_id      String?   @db.Uuid
}

model payments {
  id              String        @id @db.Uuid
  cart_product_id String?       @db.Uuid
  amount_paid     Decimal?      @db.Decimal(10, 2)
  payment_method  String?       @db.VarChar(255)
  payment_status  String?       @db.VarChar(50)
  payment_date    DateTime?     @default(now()) @db.Timestamp(6)
  payment_details Json?
  order_id        String?       @db.Uuid
  user_id         String?       @db.Uuid
  cart_product    cart_product? @relation(fields: [cart_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id          String   @id @db.Uuid
  image       String
  title       String
  star        Decimal? @db.Decimal(2, 1)
  price       Decimal  @db.Decimal
  istopdeal   Boolean
  isauthentic Boolean
  shipping    Json
  madein      String
  stock       stock[]
}

model stock {
  id           Int       @id @default(autoincrement())
  product_id   String    @db.Uuid
  quantity     Int
  location     String
  last_updated DateTime? @default(now()) @db.Timestamp(6)
  products     products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_product")
}

model shipping {
  id         Int       @id @default(autoincrement())
  order_id   String?   @db.Uuid
  full_name  String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  phone      String?   @db.VarChar(50)
  address    String
  create_at  DateTime? @default(now()) @db.Timestamp(6)
  shipper_id Int?
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model shipper {
  id            Int     @id @default(autoincrement())
  company_name  String  @db.VarChar(255)
  contact_name  String? @db.VarChar(255)
  contact_title String? @db.VarChar(100)
  address       String? @db.VarChar(255)
  city          String? @db.VarChar(100)
  region        String? @db.VarChar(100)
  postal_code   String? @db.VarChar(20)
  country       String? @db.VarChar(100)
  phone         String? @db.VarChar(50)
  email         String? @db.VarChar(100)
  website       String? @db.VarChar(255)
  status        String? @db.VarChar(10)
}
